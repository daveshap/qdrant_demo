How to solve the problem of secure randomly generated GUIDs when the size of the data outgrows the GUIDs I've been struggling with this problem for a little while... How to hide the order that records were created in, basically. You typically do this by generating a \"GUID\". But this GUID is arbitrarily chosen to be a very large number, essentially a number so large that it will encompass all records ever created.But the question is, if it is too small. If later on down the road there turns out to be a number twice as big as the last \"biggest\" number. Then we can know from the IDs that the ones with the length of the first GUID are part of the first group of people that were using the system. So there is the creeping in of that original problem: the order of the records is now no-longer hidden.If you simplify the problem, you can say at first there are 100 possible slots, so everyone out of the possible hundred get a random number 1-100. When it reaches 100, then you grow to the next chunk, let's say 200 or 1000. So then everyone from that point forwards gets a random number 101-1000. But this means the first group is still identifiable. Once this number becomes too small, we go to lets say 10,000. Then numbers 1001-10000 are for the next set, but we can now tell the first two groups of people from the third.To hide this, it is as if you need to recalculate every ID and do a batch update of all possible URLs using these IDs, or cross-references. Then you would just provide a new random number out of the random set. But the problem with this is if the IDs were written down on paper or used on a platform outside of what you own (like they post a link on twitter), then it would break with this approach.So it seems the only viable solution is to pick a number large enough that it will never, ever be crossed. But this seems like a moving target. It seems you could always need a bigger number.As such, I'm wondering if there are any alternative solutions instead of picking an arbitrarily large random number as the size of the set of GUIDs.