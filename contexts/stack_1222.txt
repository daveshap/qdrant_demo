DB design to avoid versioning inconsistencies between the application layer and the database layer Usually there is a 1-1 mapping between an object in the application layer and a table in the database layer.<br>This coupling leads to complexities whenever there is a database schema change and the application version may not be compatible with the current database version that it is talking to.<br>I was reading that there is an approach of database design that is driven by metadata. Something like the fields available for an object is found from a table and then a query is done. So some form of direction in order to avoid versioning problems.<br>Is this approach used in general and how exactly is it implemented? Also are there are other approaches to deal with this issue?