Will this auth scheme be secure and protect user passwords/hashes? I am working on a website with accounts and I want a login scheme that does not expose users' passwords or hashes in the event of a total security failure. I would greatly appreciate some feedback on this authentication scheme:Client retrieves auth challenge from serverPassword is hashed to 32 byte integer on clientInteger is used to create a keypair, PK, using static keypair generatorTemporary session key is generated, SKChallenge is signed with PKSK.public and challenge signature are encrypted with PK.private and server public keyCipher is sent to server with usernameServer decrypts cipher using associated public key for username, checks challenge signature and allows SK.public to be used for x timeEdit: I'm a fool, this doesn't add any level of security. If the generator is static then it literally has no advantage over a hash. This one was super obvious and I should have caught it, but it's still a good reminder not to try to make new protocols unless you really know what you're doing.